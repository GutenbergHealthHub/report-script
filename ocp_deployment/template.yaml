kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: report-script-template
  annotations:
    description: "Template for the set up of the egePan mobile backend and PostgreSQL database service on OpenShift."
    tags: "egePan,nodejs,backend,database,postgresql"
objects:
  - kind: Secret
    apiVersion: 1
    name:
  - kind: ImageStream
    apiVersion: image.openshift.io/v1
    metadata:
      annotations:
        app.openshift.io/vcs-ref: main
        app.openshift.io/vcs-uri: ${APP_GIT_URL}
      name: report-script
      labels:
        app: report-script
        app.kubernetes.io/component: mobile-backend
        app.kubernetes.io/name: ${APP_NAME}
        app.kubernetes.io/instance: ${APP_NAME}-${INSTANCE_IDENTIFIER}
        app.kubernetes.io/part-of: ${HIGH_LVL_APP_NAME}
        app.openshift.io/runtime: python
        app.openshift.io/runtime-version: "3.8"
    spec: {}
  - kind: BuildConfig
    apiVersion: build.openshift.io/v1
    metadata:
      name: mobile-backend
      annotations:
        app.openshift.io/vcs-ref: ${GIT_BRANCH}
        app.openshift.io/vcs-uri: ${APP_GIT_URL}
      labels:
        app: mobile-backend
        app.kubernetes.io/component: mobile-backend
        app.kubernetes.io/name: ${APP_NAME}
        app.kubernetes.io/instance: ${APP_NAME}-${INSTANCE_IDENTIFIER}
        app.kubernetes.io/part-of: ${HIGH_LVL_APP_NAME}
        app.openshift.io/runtime: nodejs
        app.openshift.io/runtime-version: "12"
    spec:
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: report-script
      resources: {}
      successfulBuildsHistoryLimit: 5
      failedBuildsHistoryLimit: 5
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            namespace: openshift
            name: "python:3.8"
      postCommit: {}
      source:
        type: Git
        git:
          uri: ${APP_GIT_URL}
          ref: ${GIT_BRANCH}
        contextDir: /
        sourceSecret:
          name: mobile-backend-git-access-cert
      runPolicy: Serial
  - kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      annotations:
        app.openshift.io/vcs-uri: ${APP_GIT_URL}
      name: mobile-backend
      labels:
        app: mobile-backend
        app.kubernetes.io/component: mobile-backend
        app.kubernetes.io/name: ${APP_NAME}
        app.kubernetes.io/instance: ${APP_NAME}-${INSTANCE_IDENTIFIER}
        app.kubernetes.io/part-of: ${HIGH_LVL_APP_NAME}
        app.openshift.io/runtime: nodejs
        app.openshift.io/runtime-version: "12"
    spec:
      strategy:
        type: Rolling
        rollingParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 600
          maxUnavailable: 25%
          maxSurge: 25%
        resources: {}
        activeDeadlineSeconds: 21600
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - mobile-backend
            from:
              kind: ImageStreamTag
              name: "mobile-backend:${ENV}"
        - type: ConfigChange
      replicas: 1
      revisionHistoryLimit: 10
      test: false
      selector:
        app: mobile-backend
        deploymentconfig: mobile-backend
      template:
        metadata:
          labels:
            app: mobile-backend
            deploymentconfig: mobile-backend
        spec:
          containers:
            - name: report-script
              envFrom:
                - secretRef:
                    name: database-creds
                - secretRef:
                    name: mobile-backend-signing-key-pair
                - configMapRef:
                    name: mobile-backend-env
              resources: {}
              env:
              - name: GOOGLE_APPLICATION_CREDENTIALS
                value: /opt/app-root/secrets/google-services.json
              volumeMounts:
              - name: secrets
                mountPath: /opt/app-root/secrets
                readOnly: true
      volumes:
        - name: secrets
          secret:
            secretName: google-services-secret
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              imagePullPolicy: Always
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
parameters:
  - name: APP_GIT_URL
    description: The Git URL of the application source code
    required: true
  - name: APP_NAME
    description: Name of the application
    value: num-app
  - name: DATABASE_HOST
    description: Name of database host
    value: database
  - name: DATABASE_NAME
    description: Name of the PostgreSQL database accessed.
    displayName: PostgreSQL Database Name
    required: true
  - name: DATABASE_PORT
    description: Name of database port
    value: "5432"
  - name: DATABASE_USER
    description: Username for PostgreSQL user that will be used for accessing the database.
    displayName: PostgreSQL Connection Username
    from: user[A-Z0-9]{3}
    generate: expression
    required: true
  - name: GIT_BRANCH
    description: The Git branch that should be used for new builds
    value: main
  - name: HIGH_LVL_APP_NAME
    description: Name of the higher level application that a resource is part of
    value: egePan
  - name: INSTANCE_IDENTIFIER
    description: Unique identifier for resources
    generate: expression
    from: "[a-zA-Z0-9]{5}"
  - name: MEMORY_LIMIT
    description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    required: true
    value: 512Mi
  - name: SSH_PRIVATE_KEY
    description: Private Key for access to Git
    required: true
  - name: GOOGLE_API_CREDENTIALS
    description: credentials to access the google api
    required: true
